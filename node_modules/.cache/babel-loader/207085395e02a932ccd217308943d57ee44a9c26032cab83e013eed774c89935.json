{"ast":null,"code":"var _jsxFileName = \"/Users/aranya/Desktop/3D-WebXR-Furniture-main/src/App.js\";\nimport \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { TransformControls } from \"three/examples/jsm/controls/TransformControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n  let scene, camera, renderer;\n  let transformControl;\n  let xrLight;\n  let fallbackLight, directionalLight;\n  let models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\", \"standing_lamp.glb\", \"plant_decor.glb\", \"little_bookcase.glb\", \"dining_set.glb\"];\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 0.1, 1, 1, 1];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let selectedModel = null;\n  let controller;\n  init();\n  setupFurnitureSelection();\n  animate();\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    renderer.xr.enabled = true;\n\n    // Fallback Lights (when AR light estimation is not available)\n    fallbackLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1);\n    fallbackLight.position.set(0, 1, 0);\n    scene.add(fallbackLight);\n    directionalLight = new THREE.DirectionalLight(0xffffff, 0.6);\n    directionalLight.position.set(0, 4, 2);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // Light Estimation Setup\n    xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      scene.add(xrLight);\n      if (xrLight.light) {\n        xrLight.light.castShadow = true;\n        xrLight.light.intensity = 1;\n      }\n      scene.remove(fallbackLight);\n      scene.remove(directionalLight);\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n    xrLight.addEventListener(\"estimationend\", () => {\n      scene.remove(xrLight);\n      scene.add(fallbackLight);\n      scene.add(directionalLight);\n      scene.environment = null;\n    });\n\n    // AR Button\n    const arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"light-estimation\", \"dom-overlay\"],\n      domOverlay: {\n        root: document.body\n      }\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Transform Controls\n    transformControl = new TransformControls(camera, renderer.domElement);\n    transformControl.addEventListener(\"dragging-changed\", event => {\n      renderer.xr.enabled = !event.value;\n    });\n    scene.add(transformControl);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        model.traverse(child => {\n          if (child.isMesh) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        });\n        items[i] = model;\n      });\n    }\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    }));\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Transform Gizmo Keyboard Shortcuts\n    window.addEventListener(\"keydown\", e => {\n      switch (e.key.toLowerCase()) {\n        case \"t\":\n          transformControl.setMode(\"translate\");\n          break;\n        case \"r\":\n          transformControl.setMode(\"rotate\");\n          break;\n        case \"s\":\n          transformControl.setMode(\"scale\");\n          break;\n      }\n    });\n  }\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n      reticle.matrix.decompose(newModel.position, newModel.quaternion, newModel.scale);\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n      scene.add(newModel);\n      selectedModel = newModel;\n      transformControl.attach(selectedModel);\n    }\n  }\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    e.target.classList.add(\"clicked\");\n  };\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", e => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n      if (!hitTestSourceRequested) {\n        session.requestReferenceSpace(\"viewer\").then(refSpace => {\n          session.requestHitTestSource({\n            space: refSpace\n          }).then(source => {\n            hitTestSource = source;\n          });\n        });\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n        hitTestSourceRequested = true;\n      }\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          reticle.visible = true;\n          reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n    renderer.render(scene, camera);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["THREE","ARButton","GLTFLoader","XREstimatedLight","TransformControls","jsxDEV","_jsxDEV","App","reticle","hitTestSource","hitTestSourceRequested","scene","camera","renderer","transformControl","xrLight","fallbackLight","directionalLight","models","modelScaleFactor","items","itemSelectedIndex","selectedModel","controller","init","setupFurnitureSelection","animate","myCanvas","document","getElementById","Scene","PerspectiveCamera","innerWidth","innerHeight","WebGLRenderer","canvas","antialias","alpha","setPixelRatio","window","devicePixelRatio","setSize","shadowMap","enabled","type","PCFSoftShadowMap","xr","HemisphereLight","position","set","add","DirectionalLight","castShadow","addEventListener","light","intensity","remove","environment","arButton","createButton","requiredFeatures","optionalFeatures","domOverlay","root","body","style","bottom","appendChild","domElement","event","value","i","length","loader","load","glb","model","traverse","child","isMesh","receiveShadow","getController","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","color","matrixAutoUpdate","visible","e","key","toLowerCase","setMode","newModel","clone","matrix","decompose","quaternion","scale","scaleFactor","attach","onClicked","selectItem","index","el","querySelector","classList","target","preventDefault","stopPropagation","setAnimationLoop","render","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","refSpace","requestHitTestSource","space","source","hitTestResults","getHitTestResults","hit","fromArray","getPose","transform","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aranya/Desktop/3D-WebXR-Furniture-main/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as THREE from \"three\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { XREstimatedLight } from \"three/examples/jsm/webxr/XREstimatedLight\";\nimport { TransformControls } from \"three/examples/jsm/controls/TransformControls\";\n\nfunction App() {\n  let reticle;\n  let hitTestSource = null;\n  let hitTestSourceRequested = false;\n\n  let scene, camera, renderer;\n  let transformControl;\n  let xrLight;\n  let fallbackLight, directionalLight;\n\n  let models = [\n    \"./dylan_armchair_yolk_yellow.glb\",\n    \"./ivan_armchair_mineral_blue.glb\",\n    \"./marble_coffee_table.glb\",\n    \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n    \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n    \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n    \"standing_lamp.glb\",\n    \"plant_decor.glb\",\n    \"little_bookcase.glb\",\n    \"dining_set.glb\",\n  ];\n\n  let modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 0.1, 1, 1, 1];\n  let items = [];\n  let itemSelectedIndex = 0;\n  let selectedModel = null;\n\n  let controller;\n\n  init();\n  setupFurnitureSelection();\n  animate();\n\n  function init() {\n    let myCanvas = document.getElementById(\"canvas\");\n    scene = new THREE.Scene();\n    camera = new THREE.PerspectiveCamera(70, myCanvas.innerWidth / myCanvas.innerHeight, 0.01, 20);\n\n    renderer = new THREE.WebGLRenderer({\n      canvas: myCanvas,\n      antialias: true,\n      alpha: true,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(myCanvas.innerWidth, myCanvas.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    renderer.xr.enabled = true;\n\n    // Fallback Lights (when AR light estimation is not available)\n    fallbackLight = new THREE.HemisphereLight(0xffffff, 0x444444, 1);\n    fallbackLight.position.set(0, 1, 0);\n    scene.add(fallbackLight);\n\n    directionalLight = new THREE.DirectionalLight(0xffffff, 0.6);\n    directionalLight.position.set(0, 4, 2);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // Light Estimation Setup\n    xrLight = new XREstimatedLight(renderer);\n    xrLight.addEventListener(\"estimationstart\", () => {\n      scene.add(xrLight);\n      if (xrLight.light) {\n        xrLight.light.castShadow = true;\n        xrLight.light.intensity = 1;\n      }\n      scene.remove(fallbackLight);\n      scene.remove(directionalLight);\n      if (xrLight.environment) {\n        scene.environment = xrLight.environment;\n      }\n    });\n\n    xrLight.addEventListener(\"estimationend\", () => {\n      scene.remove(xrLight);\n      scene.add(fallbackLight);\n      scene.add(directionalLight);\n      scene.environment = null;\n    });\n\n    // AR Button\n    const arButton = ARButton.createButton(renderer, {\n      requiredFeatures: [\"hit-test\"],\n      optionalFeatures: [\"light-estimation\", \"dom-overlay\"],\n      domOverlay: { root: document.body },\n    });\n    arButton.style.bottom = \"20%\";\n    document.body.appendChild(arButton);\n\n    // Transform Controls\n    transformControl = new TransformControls(camera, renderer.domElement);\n    transformControl.addEventListener(\"dragging-changed\", (event) => {\n      renderer.xr.enabled = !event.value;\n    });\n    scene.add(transformControl);\n\n    // Load Models\n    for (let i = 0; i < models.length; i++) {\n      const loader = new GLTFLoader();\n      loader.load(models[i], function (glb) {\n        let model = glb.scene;\n        model.traverse((child) => {\n          if (child.isMesh) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        });\n        items[i] = model;\n      });\n    }\n\n    controller = renderer.xr.getController(0);\n    controller.addEventListener(\"select\", onSelect);\n    scene.add(controller);\n\n    // Reticle\n    reticle = new THREE.Mesh(\n      new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial({ color: 0x00ff00 })\n    );\n    reticle.matrixAutoUpdate = false;\n    reticle.visible = false;\n    scene.add(reticle);\n\n    // Transform Gizmo Keyboard Shortcuts\n    window.addEventListener(\"keydown\", (e) => {\n      switch (e.key.toLowerCase()) {\n        case \"t\":\n          transformControl.setMode(\"translate\");\n          break;\n        case \"r\":\n          transformControl.setMode(\"rotate\");\n          break;\n        case \"s\":\n          transformControl.setMode(\"scale\");\n          break;\n      }\n    });\n  }\n\n  function onSelect() {\n    if (reticle.visible) {\n      let newModel = items[itemSelectedIndex].clone();\n      newModel.visible = true;\n\n      reticle.matrix.decompose(\n        newModel.position,\n        newModel.quaternion,\n        newModel.scale\n      );\n\n      let scaleFactor = modelScaleFactor[itemSelectedIndex];\n      newModel.scale.set(scaleFactor, scaleFactor, scaleFactor);\n\n      scene.add(newModel);\n      selectedModel = newModel;\n      transformControl.attach(selectedModel);\n    }\n  }\n\n  const onClicked = (e, selectItem, index) => {\n    itemSelectedIndex = index;\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.classList.remove(\"clicked\");\n    }\n    e.target.classList.add(\"clicked\");\n  };\n\n  function setupFurnitureSelection() {\n    for (let i = 0; i < models.length; i++) {\n      const el = document.querySelector(`#item` + i);\n      el.addEventListener(\"beforexrselect\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      });\n      el.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClicked(e, items[i], i);\n      });\n    }\n  }\n\n  function animate() {\n    renderer.setAnimationLoop(render);\n  }\n\n  function render(timestamp, frame) {\n    if (frame) {\n      const referenceSpace = renderer.xr.getReferenceSpace();\n      const session = renderer.xr.getSession();\n\n      if (!hitTestSourceRequested) {\n        session.requestReferenceSpace(\"viewer\").then((refSpace) => {\n          session.requestHitTestSource({ space: refSpace }).then((source) => {\n            hitTestSource = source;\n          });\n        });\n\n        session.addEventListener(\"end\", () => {\n          hitTestSourceRequested = false;\n          hitTestSource = null;\n        });\n\n        hitTestSourceRequested = true;\n      }\n\n      if (hitTestSource) {\n        const hitTestResults = frame.getHitTestResults(hitTestSource);\n        if (hitTestResults.length) {\n          const hit = hitTestResults[0];\n          reticle.visible = true;\n          reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n        } else {\n          reticle.visible = false;\n        }\n      }\n    }\n\n    renderer.render(scene, camera);\n  }\n\n  return <div className=\"App\"></div>;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
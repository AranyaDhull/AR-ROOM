{"ast":null,"code":"var _jsxFileName = \"/Users/aranya/Desktop/3D-WebXR-Furniture-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet models = [\"./dylan_armchair_yolk_yellow.glb\", \"./ivan_armchair_mineral_blue.glb\", \"./marble_coffee_table.glb\", \"./flippa_functional_coffee_table_w._storagewalnut.glb\", \"./frame_armchairpetrol_velvet_with_gold_frame.glb\", \"./elnaz_nesting_side_tables_brass__green_marble.glb\", \"./standing_lamp.glb\", \"./plant_decor.glb\", \"./little_bookcase.glb\", \"./dining_set.glb\"];\nlet modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 0.02, 0.015, 0.03, 0.03];\nlet items = [];\nlet itemSelectedIndex = 0;\nconst App = () => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    let container = containerRef.current;\n    let camera, scene, renderer;\n    let controller;\n    let reticle;\n    let hitTestSource = null;\n    let hitTestSourceRequested = false;\n    init();\n    renderer.setAnimationLoop(render);\n    function init() {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n      renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.xr.enabled = true;\n      container.appendChild(renderer.domElement);\n      document.body.appendChild(ARButton.createButton(renderer, {\n        requiredFeatures: [\"hit-test\"]\n      }));\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n      light.position.set(0.5, 1, 0.25);\n      scene.add(light);\n      controller = renderer.xr.getController(0);\n      controller.addEventListener(\"select\", onSelect);\n      scene.add(controller);\n      reticle = new THREE.Mesh(new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2), new THREE.MeshBasicMaterial());\n      reticle.matrixAutoUpdate = false;\n      reticle.visible = false;\n      scene.add(reticle);\n    }\n    function onSelect() {\n      if (reticle.visible) {\n        const loader = new GLTFLoader();\n        loader.load(models[itemSelectedIndex], function (gltf) {\n          const model = gltf.scene;\n          model.scale.setScalar(modelScaleFactor[itemSelectedIndex]);\n          model.position.setFromMatrixPosition(reticle.matrix);\n          model.quaternion.setFromRotationMatrix(reticle.matrix);\n          scene.add(model);\n          items.push(model);\n        });\n      }\n    }\n    function render(timestamp, frame) {\n      if (frame) {\n        const referenceSpace = renderer.xr.getReferenceSpace();\n        const session = renderer.xr.getSession();\n        if (!hitTestSourceRequested) {\n          session.requestReferenceSpace(\"viewer\").then(referenceSpace => {\n            session.requestHitTestSource({\n              space: referenceSpace\n            }).then(source => {\n              hitTestSource = source;\n            });\n          });\n          session.addEventListener(\"end\", () => {\n            hitTestSourceRequested = false;\n            hitTestSource = null;\n          });\n          hitTestSourceRequested = true;\n        }\n        if (hitTestSource) {\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\n          if (hitTestResults.length > 0) {\n            const hit = hitTestResults[0];\n            reticle.visible = true;\n            reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n          } else {\n            reticle.visible = false;\n          }\n        }\n      }\n      renderer.render(scene, camera);\n    }\n    window.addEventListener(\"resize\", () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n  }, []);\n\n  // This runs AFTER React renders the thumbnail elements\n  useEffect(() => {\n    const thumbnails = document.querySelectorAll(\".thumbnail\");\n    thumbnails.forEach((el, index) => {\n      el.addEventListener(\"click\", () => {\n        itemSelectedIndex = index;\n      });\n    });\n    return () => {\n      thumbnails.forEach(el => {\n        el.removeEventListener(\"click\", () => {});\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: 0,\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        background: \"rgba(255,255,255,0.9)\",\n        padding: \"10px\",\n        overflowX: \"auto\"\n      },\n      children: models.map((_, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"thumbnail\",\n        src: `thumbnails/thumb${index}.png`,\n        alt: `Model ${index}`,\n        style: {\n          width: 80,\n          height: 80,\n          objectFit: \"contain\",\n          marginRight: 10,\n          cursor: \"pointer\",\n          border: \"2px solid gray\",\n          borderRadius: \"8px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"iENxip3MlGo86izbk9A2xd09AZE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","ARButton","jsxDEV","_jsxDEV","Fragment","_Fragment","models","modelScaleFactor","items","itemSelectedIndex","App","_s","containerRef","container","current","camera","scene","renderer","controller","reticle","hitTestSource","hitTestSourceRequested","init","setAnimationLoop","render","Scene","PerspectiveCamera","window","innerWidth","innerHeight","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","xr","enabled","appendChild","domElement","document","body","createButton","requiredFeatures","light","HemisphereLight","position","set","add","getController","addEventListener","onSelect","Mesh","RingGeometry","rotateX","Math","PI","MeshBasicMaterial","matrixAutoUpdate","visible","loader","load","gltf","model","scale","setScalar","setFromMatrixPosition","matrix","quaternion","setFromRotationMatrix","push","timestamp","frame","referenceSpace","getReferenceSpace","session","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","length","hit","fromArray","getPose","transform","aspect","updateProjectionMatrix","thumbnails","querySelectorAll","forEach","el","index","removeEventListener","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","style","bottom","width","display","justifyContent","background","padding","overflowX","map","_","className","src","alt","height","objectFit","marginRight","cursor","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/aranya/Desktop/3D-WebXR-Furniture-main/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { ARButton } from \"three/examples/jsm/webxr/ARButton\";\n\nlet models = [\n  \"./dylan_armchair_yolk_yellow.glb\",\n  \"./ivan_armchair_mineral_blue.glb\",\n  \"./marble_coffee_table.glb\",\n  \"./flippa_functional_coffee_table_w._storagewalnut.glb\",\n  \"./frame_armchairpetrol_velvet_with_gold_frame.glb\",\n  \"./elnaz_nesting_side_tables_brass__green_marble.glb\",\n  \"./standing_lamp.glb\",\n  \"./plant_decor.glb\",\n  \"./little_bookcase.glb\",\n  \"./dining_set.glb\",\n];\n\nlet modelScaleFactor = [0.01, 0.01, 0.005, 0.01, 0.01, 0.01, 0.02, 0.015, 0.03, 0.03];\nlet items = [];\nlet itemSelectedIndex = 0;\n\nconst App = () => {\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    let container = containerRef.current;\n    let camera, scene, renderer;\n    let controller;\n    let reticle;\n    let hitTestSource = null;\n    let hitTestSourceRequested = false;\n\n    init();\n    renderer.setAnimationLoop(render);\n\n    function init() {\n      scene = new THREE.Scene();\n\n      camera = new THREE.PerspectiveCamera(\n        70,\n        window.innerWidth / window.innerHeight,\n        0.01,\n        20\n      );\n\n      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      renderer.xr.enabled = true;\n      container.appendChild(renderer.domElement);\n\n      document.body.appendChild(ARButton.createButton(renderer, { requiredFeatures: [\"hit-test\"] }));\n\n      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n      light.position.set(0.5, 1, 0.25);\n      scene.add(light);\n\n      controller = renderer.xr.getController(0);\n      controller.addEventListener(\"select\", onSelect);\n      scene.add(controller);\n\n      reticle = new THREE.Mesh(\n        new THREE.RingGeometry(0.15, 0.2, 32).rotateX(-Math.PI / 2),\n        new THREE.MeshBasicMaterial()\n      );\n      reticle.matrixAutoUpdate = false;\n      reticle.visible = false;\n      scene.add(reticle);\n    }\n\n    function onSelect() {\n      if (reticle.visible) {\n        const loader = new GLTFLoader();\n        loader.load(models[itemSelectedIndex], function (gltf) {\n          const model = gltf.scene;\n          model.scale.setScalar(modelScaleFactor[itemSelectedIndex]);\n          model.position.setFromMatrixPosition(reticle.matrix);\n          model.quaternion.setFromRotationMatrix(reticle.matrix);\n          scene.add(model);\n          items.push(model);\n        });\n      }\n    }\n\n    function render(timestamp, frame) {\n      if (frame) {\n        const referenceSpace = renderer.xr.getReferenceSpace();\n        const session = renderer.xr.getSession();\n\n        if (!hitTestSourceRequested) {\n          session.requestReferenceSpace(\"viewer\").then((referenceSpace) => {\n            session\n              .requestHitTestSource({ space: referenceSpace })\n              .then((source) => {\n                hitTestSource = source;\n              });\n          });\n\n          session.addEventListener(\"end\", () => {\n            hitTestSourceRequested = false;\n            hitTestSource = null;\n          });\n\n          hitTestSourceRequested = true;\n        }\n\n        if (hitTestSource) {\n          const hitTestResults = frame.getHitTestResults(hitTestSource);\n\n          if (hitTestResults.length > 0) {\n            const hit = hitTestResults[0];\n            reticle.visible = true;\n            reticle.matrix.fromArray(hit.getPose(referenceSpace).transform.matrix);\n          } else {\n            reticle.visible = false;\n          }\n        }\n      }\n\n      renderer.render(scene, camera);\n    }\n\n    window.addEventListener(\"resize\", () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n  }, []);\n\n  // This runs AFTER React renders the thumbnail elements\n  useEffect(() => {\n    const thumbnails = document.querySelectorAll(\".thumbnail\");\n    thumbnails.forEach((el, index) => {\n      el.addEventListener(\"click\", () => {\n        itemSelectedIndex = index;\n      });\n    });\n\n    return () => {\n      thumbnails.forEach((el) => {\n        el.removeEventListener(\"click\", () => {});\n      });\n    };\n  }, []);\n\n  return (\n    <>\n      <div ref={containerRef}></div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: 0,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          background: \"rgba(255,255,255,0.9)\",\n          padding: \"10px\",\n          overflowX: \"auto\",\n        }}\n      >\n        {models.map((_, index) => (\n          <img\n            key={index}\n            className=\"thumbnail\"\n            src={`thumbnails/thumb${index}.png`}\n            alt={`Model ${index}`}\n            style={{\n              width: 80,\n              height: 80,\n              objectFit: \"contain\",\n              marginRight: 10,\n              cursor: \"pointer\",\n              border: \"2px solid gray\",\n              borderRadius: \"8px\",\n            }}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
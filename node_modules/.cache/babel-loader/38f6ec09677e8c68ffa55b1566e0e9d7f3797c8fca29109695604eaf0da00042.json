{"ast":null,"code":"import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nexport function loadGLTFModel(path, onLoad) {\n  const loader = new GLTFLoader();\n  loader.load(path, gltf => {\n    const model = gltf.scene;\n    model.traverse(child => {\n      if (child.isMesh) {\n        child.castShadow = true;\n      }\n    });\n    model.scale.set(0.01, 0.01, 0.01); // Adjust if needed\n    onLoad(model);\n  }, undefined, error => {\n    console.error(\"Error loading GLTF model:\", error);\n  });\n}","map":{"version":3,"names":["GLTFLoader","THREE","loadGLTFModel","path","onLoad","loader","load","gltf","model","scene","traverse","child","isMesh","castShadow","scale","set","undefined","error","console"],"sources":["/Users/aranya/Desktop/3D-WebXR-Furniture-main/src/modelLoader.js"],"sourcesContent":["import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\n\nexport function loadGLTFModel(path, onLoad) {\n  const loader = new GLTFLoader();\n\n  loader.load(\n    path,\n    (gltf) => {\n      const model = gltf.scene;\n      model.traverse((child) => {\n        if (child.isMesh) {\n          child.castShadow = true;\n        }\n      });\n\n      model.scale.set(0.01, 0.01, 0.01); // Adjust if needed\n      onLoad(model);\n    },\n    undefined,\n    (error) => {\n      console.error(\"Error loading GLTF model:\", error);\n    }\n  );\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uCAAuC;AAClE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC1C,MAAMC,MAAM,GAAG,IAAIL,UAAU,CAAC,CAAC;EAE/BK,MAAM,CAACC,IAAI,CACTH,IAAI,EACHI,IAAI,IAAK;IACR,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK;IACxBD,KAAK,CAACE,QAAQ,CAAEC,KAAK,IAAK;MACxB,IAAIA,KAAK,CAACC,MAAM,EAAE;QAChBD,KAAK,CAACE,UAAU,GAAG,IAAI;MACzB;IACF,CAAC,CAAC;IAEFL,KAAK,CAACM,KAAK,CAACC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACnCX,MAAM,CAACI,KAAK,CAAC;EACf,CAAC,EACDQ,SAAS,EACRC,KAAK,IAAK;IACTC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD,CACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}